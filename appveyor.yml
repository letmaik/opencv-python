environment:
  matrix:
    - PYTHON: "C:\\Python37-x64"
      ENABLE_CONTRIB: 0
      ENABLE_HEADLESS: 0

    - PYTHON: "C:\\Python38-x64"
      ENABLE_CONTRIB: 0
      ENABLE_HEADLESS: 0

    - PYTHON: "C:\\Python39-x64"
      ENABLE_CONTRIB: 0
      ENABLE_HEADLESS: 0

install:
  - ps: |
      if (-not (Test-Path $env:PYTHON)) {
        .\install_python.ps1
      }
  - ps: if (-not (Test-Path $env:PYTHON)) { throw "No $env:PYTHON" }
  - "set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - python --version

build_script:
- cmd: |
    "%PYTHON%\\python.exe" -m pip install --upgrade pip
    "%PYTHON%\\python.exe" -m pip install --upgrade setuptools
    "%PYTHON%\\python.exe" -m pip install scikit-build numpy
    set "CI_BUILD=1" && "%PYTHON%\\python.exe" setup.py bdist_wheel --build-type=Debug

before_test:
- ps: |

    cd ${Env:APPVEYOR_BUILD_FOLDER}\tests
    $env:PYTHONWARNINGS = "ignore:::pip._internal.cli.base_command"
    &"${Env:PYTHON}\\python.exe" -m pip install --user --no-warn-script-location (ls "../dist/opencv_*.whl")
    if ($LastExitCode -ne 0) {throw $LastExitCode}

test_script:
- cmd: |

    cd %APPVEYOR_BUILD_FOLDER%\tests
    "%PYTHON%\\python.exe" -m unittest test

artifacts:
- path: dist\opencv*.whl
  name: wheels
